%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: Wesley Mackey
%%Creator: GNU enscript 1.6.4
%%CreationDate: Thu May 16 15:28:18 2013
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 4
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 708 def
/d_header_w 536 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 708 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (debug.h) def
/fdir () def
/ftail (debug.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: debug.h,v 1.4 2013-05-16 15:07:42-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#ifndef __DEBUG_H__) s
30 662 M (4:) s
48 662 M
(#define __DEBUG_H__) s
30 651 M (5:) s
30 640 M (6:) s
48 640 M
(#include <stdbool.h>) s
30 629 M (7:) s
30 618 M (8:) s
48 618 M
(//) s
30 607 M (9:) s
48 607 M
(// DESCRIPTION) s
24 596 M (10:) s
48 596 M
(//    Debugging library containing miscellaneous useful things.) s
24 585 M (11:) s
48 585 M
(//) s
24 574 M (12:) s
24 563 M (13:) s
48 563 M
(//) s
24 552 M (14:) s
48 552 M
(// Program name and exit status.) s
24 541 M (15:) s
48 541 M
(//) s
24 530 M (16:) s
48 530 M
(extern char *program_name;) s
24 519 M (17:) s
48 519 M
(extern int exit_status;) s
24 508 M (18:) s
24 497 M (19:) s
48 497 M
(//) s
24 486 M (20:) s
48 486 M
(// Support for STUB statements.) s
24 475 M (21:) s
48 475 M
(//) s
24 464 M (22:) s
48 464 M
(#define STUB\(STMT\) STMT) s
24 453 M (23:) s
24 442 M (24:) s
48 442 M
(//) s
24 431 M (25:) s
48 431 M
(// Sets a string of debug flags to be used by DEBUGF and DEBUGS.) s
24 420 M (26:) s
48 420 M
(// If a particular debug flag has been set, messages are printed.) s
24 409 M (27:) s
48 409 M
(// The flag "@" turns on all flags.) s
24 398 M (28:) s
48 398 M
(//) s
24 387 M (29:) s
48 387 M
(void set_debug_flags \(char *flags\);) s
24 376 M (30:) s
24 365 M (31:) s
48 365 M
(//) s
24 354 M (32:) s
48 354 M
(// Check if a debug flag is set.) s
24 343 M (33:) s
48 343 M
(//) s
24 332 M (34:) s
48 332 M
(bool get_debug_flag \(char flag\);) s
24 321 M (35:) s
24 310 M (36:) s
48 310 M
(//) s
24 299 M (37:) s
48 299 M
(// DEBUGF takes printf-like arguments.) s
24 288 M (38:) s
48 288 M
(// DEBUGS takes any fprintf\(stderr...\) statement as an argument.) s
24 277 M (39:) s
48 277 M
(//) s
24 266 M (40:) s
48 266 M
(#ifdef NDEBUG) s
24 255 M (41:) s
48 255 M
(#define DEBUGF\(FLAG,...\)) s
24 244 M (42:) s
48 244 M
(#define DEBUGS\(FLAG,STMT\)) s
24 233 M (43:) s
48 233 M
(#else) s
24 222 M (44:) s
48 222 M
(#define DEBUGF\(FLAG,...\) \\) s
24 211 M (45:) s
48 211 M
(        if \(get_debug_flag \(FLAG\)\) { \\) s
24 200 M (46:) s
48 200 M
(           __show_debug \(FLAG, __FILE__, __LINE__, __func__\); \\) s
24 189 M (47:) s
48 189 M
(           fprintf \(stderr, __VA_ARGS__\); \\) s
24 178 M (48:) s
48 178 M
(           fflush \(NULL\); \\) s
24 167 M (49:) s
48 167 M
(        }) s
24 156 M (50:) s
48 156 M
(#define DEBUGS\(FLAG,STMT\) \\) s
24 145 M (51:) s
48 145 M
(        if \(get_debug_flag \(FLAG\)\) { \\) s
24 134 M (52:) s
48 134 M
(           __show_debug \(FLAG, __FILE__, __LINE__, __func__\); \\) s
24 123 M (53:) s
48 123 M
(           STMT; \\) s
24 112 M (54:) s
48 112 M
(           fflush \(NULL\); \\) s
24 101 M (55:) s
48 101 M
(        }) s
24 90 M (56:) s
48 90 M
(void __show_debug \(char flag, char *file, int line, const char *func\);) s
24 79 M (57:) s
48 79 M
(#endif) s
24 68 M (58:) s
24 57 M (59:) s
48 57 M
(#endif) s
24 46 M (60:) s
_R
S
%%Page: (1) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (stack.h) def
/fdir () def
/ftail (stack.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: stack.h,v 1.5 2013-05-08 18:53:30-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#ifndef __STACK_H__) s
30 662 M (4:) s
48 662 M
(#define __STACK_H__) s
30 651 M (5:) s
30 640 M (6:) s
48 640 M
(#include <stdbool.h>) s
30 629 M (7:) s
30 618 M (8:) s
48 618 M
(#include "bigint.h") s
30 607 M (9:) s
24 596 M (10:) s
48 596 M
(typedef struct stack stack;) s
24 585 M (11:) s
48 585 M
(typedef bigint *stack_item;) s
24 574 M (12:) s
24 563 M (13:) s
48 563 M
(//) s
24 552 M (14:) s
48 552 M
(// Create a new empty stack.) s
24 541 M (15:) s
48 541 M
(//) s
24 530 M (16:) s
48 530 M
(stack *new_stack \(void\);) s
24 519 M (17:) s
24 508 M (18:) s
48 508 M
(//) s
24 497 M (19:) s
48 497 M
(// Free up the stack.) s
24 486 M (20:) s
48 486 M
(// Precondition: stack must be empty.) s
24 475 M (21:) s
48 475 M
(//) s
24 464 M (22:) s
48 464 M
(void free_stack \(stack *\);) s
24 453 M (23:) s
24 442 M (24:) s
48 442 M
(//) s
24 431 M (25:) s
48 431 M
(// Push a new stack_item onto the top of the stack.) s
24 420 M (26:) s
48 420 M
(//) s
24 409 M (27:) s
48 409 M
(void push_stack \(stack *, stack_item\);) s
24 398 M (28:) s
24 387 M (29:) s
48 387 M
(//) s
24 376 M (30:) s
48 376 M
(// Pop the top stack_item from the stack and return it.) s
24 365 M (31:) s
48 365 M
(//) s
24 354 M (32:) s
48 354 M
(stack_item pop_stack \(stack *\);) s
24 343 M (33:) s
24 332 M (34:) s
48 332 M
(//) s
24 321 M (35:) s
48 321 M
(// Peek into the stack and return a selected stack_item.) s
24 310 M (36:) s
48 310 M
(// Item 0 is the element at the top.) s
24 299 M (37:) s
48 299 M
(// Item size_stack - 1 is the element at the bottom.) s
24 288 M (38:) s
48 288 M
(// Precondition: 0 <= index && index < size_stack.) s
24 277 M (39:) s
48 277 M
(//) s
24 266 M (40:) s
48 266 M
(stack_item peek_stack \(stack *, size_t index\);) s
24 255 M (41:) s
24 244 M (42:) s
48 244 M
(//) s
24 233 M (43:) s
48 233 M
(// Indicate whether the stack is empty or not.) s
24 222 M (44:) s
48 222 M
(// Same as size_stack == 0.) s
24 211 M (45:) s
48 211 M
(//) s
24 200 M (46:) s
48 200 M
(bool empty_stack \(stack *\);) s
24 189 M (47:) s
24 178 M (48:) s
48 178 M
(//) s
24 167 M (49:) s
48 167 M
(// Return the current size of the stack \(number of items on the stack\).) s
24 156 M (50:) s
48 156 M
(//) s
24 145 M (51:) s
48 145 M
(size_t size_stack \(stack *\);) s
24 134 M (52:) s
24 123 M (53:) s
48 123 M
(//) s
24 112 M (54:) s
48 112 M
(// Print part of the stack in debug format.) s
24 101 M (55:) s
48 101 M
(//) s
24 90 M (56:) s
48 90 M
(void show_stack \(stack *\);) s
24 79 M (57:) s
24 68 M (58:) s
48 68 M
(#endif) s
24 57 M (59:) s
_R
S
%%Page: (1) 3
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (bigint.h) def
/fdir () def
/ftail (bigint.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: bigint.h,v 1.6 2013-05-07 21:14:09-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#ifndef __BIGINT_H__) s
30 662 M (4:) s
48 662 M
(#define __BIGINT_H__) s
30 651 M (5:) s
30 640 M (6:) s
48 640 M
(#include <stdbool.h>) s
30 629 M (7:) s
30 618 M (8:) s
48 618 M
(typedef struct bigint bigint;) s
30 607 M (9:) s
24 596 M (10:) s
48 596 M
(typedef bigint *\(*bigint_binop\) \(bigint *, bigint *\);) s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(bigint *new_bigint \(size_t capacity\);) s
24 563 M (13:) s
24 552 M (14:) s
48 552 M
(bigint *new_string_bigint \(char *string\);) s
24 541 M (15:) s
24 530 M (16:) s
48 530 M
(void free_bigint \(bigint *\);) s
24 519 M (17:) s
24 508 M (18:) s
48 508 M
(void print_bigint \(bigint *, FILE *\);) s
24 497 M (19:) s
24 486 M (20:) s
48 486 M
(bigint *add_bigint \(bigint *, bigint *\);) s
24 475 M (21:) s
24 464 M (22:) s
48 464 M
(bigint *sub_bigint \(bigint *, bigint *\);) s
24 453 M (23:) s
24 442 M (24:) s
48 442 M
(bigint *mul_bigint \(bigint *, bigint *\);) s
24 431 M (25:) s
24 420 M (26:) s
48 420 M
(void show_bigint \(bigint *\);) s
24 409 M (27:) s
24 398 M (28:) s
48 398 M
(#endif) s
24 387 M (29:) s
_R
S
%%Page: (1) 4
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (token.h) def
/fdir () def
/ftail (token.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: token.h,v 1.3 2013-05-08 22:09:41-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#ifndef __TOKEN_H__) s
30 662 M (4:) s
48 662 M
(#define __TOKEN_H__) s
30 651 M (5:) s
30 640 M (6:) s
48 640 M
(#include <stdbool.h>) s
30 629 M (7:) s
30 618 M (8:) s
48 618 M
(#define NUMBER 256) s
30 607 M (9:) s
24 596 M (10:) s
48 596 M
(typedef struct token token;) s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(token *new_token \(FILE*\);) s
24 563 M (13:) s
24 552 M (14:) s
48 552 M
(void free_token \(token *\);) s
24 541 M (15:) s
24 530 M (16:) s
48 530 M
(int scan_token \(token *\);) s
24 519 M (17:) s
24 508 M (18:) s
48 508 M
(char *peek_token \(token *\);) s
24 497 M (19:) s
24 486 M (20:) s
48 486 M
(void show_token \(token *\);) s
24 475 M (21:) s
24 464 M (22:) s
48 464 M
(#endif) s
24 453 M (23:) s
_R
S
%%Page: (1) 5
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (debug.c) def
/fdir () def
/ftail (debug.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: debug.c,v 1.3 2013-05-08 22:09:41-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#include <assert.h>) s
30 662 M (4:) s
48 662 M
(#include <limits.h>) s
30 651 M (5:) s
48 651 M
(#include <stdarg.h>) s
30 640 M (6:) s
48 640 M
(#include <stdio.h>) s
30 629 M (7:) s
48 629 M
(#include <stdlib.h>) s
30 618 M (8:) s
48 618 M
(#include <string.h>) s
30 607 M (9:) s
24 596 M (10:) s
48 596 M
(#include "debug.h") s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(static char debug_flags[UCHAR_MAX + 1];) s
24 563 M (13:) s
48 563 M
(char *program_name = NULL;) s
24 552 M (14:) s
48 552 M
(int exit_status = EXIT_SUCCESS;) s
24 541 M (15:) s
24 530 M (16:) s
48 530 M
(void set_debug_flags \(char *flags\) {) s
24 519 M (17:) s
48 519 M
(   if \(strchr \(flags, '@'\) != NULL\) {) s
24 508 M (18:) s
48 508 M
(      memset \(debug_flags, true, sizeof debug_flags\);) s
24 497 M (19:) s
48 497 M
(   }else {) s
24 486 M (20:) s
48 486 M
(      for \(char *flag = flags; *flag != '\\0'; ++flag\) {) s
24 475 M (21:) s
48 475 M
(         debug_flags[\(unsigned char\) *flag] = true;) s
24 464 M (22:) s
48 464 M
(      }) s
24 453 M (23:) s
48 453 M
(   }) s
24 442 M (24:) s
48 442 M
(}) s
24 431 M (25:) s
24 420 M (26:) s
48 420 M
(bool get_debug_flag \(char flag\) {) s
24 409 M (27:) s
48 409 M
(   return debug_flags[\(unsigned char\) flag];) s
24 398 M (28:) s
48 398 M
(}) s
24 387 M (29:) s
24 376 M (30:) s
48 376 M
(void __show_debug \(char flag, char *file, int line, const char *func\) {) s
24 365 M (31:) s
48 365 M
(   fflush \(NULL\);) s
24 354 M (32:) s
48 354 M
(   assert \(program_name != NULL\);) s
24 343 M (33:) s
48 343 M
(   fprintf \(stderr, "%s: DEBUGF\(%c\): %s[%d]: %s\(\)\\n",) s
24 332 M (34:) s
48 332 M
(            program_name, flag, file, line, func\);) s
24 321 M (35:) s
48 321 M
(}) s
24 310 M (36:) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (stack.c) def
/fdir () def
/ftail (stack.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: stack.c,v 1.11 2013-05-16 15:07:42-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#include <assert.h>) s
30 662 M (4:) s
48 662 M
(#include <stdio.h>) s
30 651 M (5:) s
48 651 M
(#include <stdlib.h>) s
30 640 M (6:) s
48 640 M
(#include <string.h>) s
30 629 M (7:) s
30 618 M (8:) s
48 618 M
(#include "stack.h") s
30 607 M (9:) s
48 607 M
(#include "debug.h") s
24 596 M (10:) s
24 585 M (11:) s
48 585 M
(#define DEFAULT_CAPACITY 16) s
24 574 M (12:) s
24 563 M (13:) s
48 563 M
(struct stack {) s
24 552 M (14:) s
48 552 M
(   size_t capacity;) s
24 541 M (15:) s
48 541 M
(   size_t size;) s
24 530 M (16:) s
48 530 M
(   stack_item *data;) s
24 519 M (17:) s
48 519 M
(};) s
24 508 M (18:) s
24 497 M (19:) s
48 497 M
(stack *new_stack \(void\) {) s
24 486 M (20:) s
48 486 M
(   stack *this = malloc \(sizeof \(stack\)\);) s
24 475 M (21:) s
48 475 M
(   assert \(this != NULL\);) s
24 464 M (22:) s
48 464 M
(   this->capacity = DEFAULT_CAPACITY;) s
24 453 M (23:) s
48 453 M
(   this->size = 0;) s
24 442 M (24:) s
48 442 M
(   this->data = calloc \(this->capacity, sizeof \(stack_item\)\);) s
24 431 M (25:) s
48 431 M
(   assert \(this->data != NULL\);) s
24 420 M (26:) s
48 420 M
(   return this;) s
24 409 M (27:) s
48 409 M
(}) s
24 398 M (28:) s
24 387 M (29:) s
48 387 M
(void free_stack \(stack *this\) {) s
24 376 M (30:) s
48 376 M
(   assert \(empty_stack \(this\)\);) s
24 365 M (31:) s
48 365 M
(   free \(this->data\);) s
24 354 M (32:) s
48 354 M
(   free \(this\);) s
24 343 M (33:) s
48 343 M
(}) s
24 332 M (34:) s
24 321 M (35:) s
48 321 M
(static bool full_stack \(stack *this\) {) s
24 310 M (36:) s
48 310 M
(   return this->size == this->capacity;) s
24 299 M (37:) s
48 299 M
(}) s
24 288 M (38:) s
24 277 M (39:) s
48 277 M
(static void realloc_stack \(stack *this\) {) s
24 266 M (40:) s
48 266 M
(   size_t old_capacity = this->capacity;) s
24 255 M (41:) s
48 255 M
(   this->capacity *= 2;) s
24 244 M (42:) s
48 244 M
(   this->data = realloc \(this->data, this->capacity\);) s
24 233 M (43:) s
48 233 M
(   memset \(this->data + old_capacity, 0, old_capacity\);) s
24 222 M (44:) s
48 222 M
(   assert \(this->data != NULL\);) s
24 211 M (45:) s
48 211 M
(}) s
24 200 M (46:) s
_R
S
%%Page: (2) 7
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (stack.c) def
/fdir () def
/ftail (stack.c) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 695 M (47:) s
24 684 M (48:) s
48 684 M
(void push_stack \(stack *this, stack_item item\) {) s
24 673 M (49:) s
48 673 M
(   if \(full_stack \(this\)\) realloc_stack \(this\);) s
24 662 M (50:) s
48 662 M
(   DEBUGS \('s', show_stack \(this\)\);) s
24 651 M (51:) s
48 651 M
(   DEBUGF \('s', "item=%p\\n", item\);) s
24 640 M (52:) s
48 640 M
(}) s
24 629 M (53:) s
24 618 M (54:) s
48 618 M
(stack_item pop_stack \(stack *this\) {) s
24 607 M (55:) s
48 607 M
(   assert \(! empty_stack \(this\)\);) s
24 596 M (56:) s
48 596 M
(   DEBUGS \('s', show_stack \(this\)\);) s
24 585 M (57:) s
48 585 M
(   STUB \(return NULL;\)) s
24 574 M (58:) s
48 574 M
(}) s
24 563 M (59:) s
24 552 M (60:) s
48 552 M
(stack_item peek_stack \(stack *this, size_t index\) {) s
24 541 M (61:) s
48 541 M
(   assert \(index < size_stack \(this\)\);) s
24 530 M (62:) s
48 530 M
(   DEBUGS \('s', show_stack \(this\)\);) s
24 519 M (63:) s
48 519 M
(   STUB \(return NULL;\)) s
24 508 M (64:) s
48 508 M
(}) s
24 497 M (65:) s
24 486 M (66:) s
48 486 M
(bool empty_stack \(stack *this\) {) s
24 475 M (67:) s
48 475 M
(   return size_stack \(this\) == 0;) s
24 464 M (68:) s
48 464 M
(}) s
24 453 M (69:) s
24 442 M (70:) s
48 442 M
(size_t size_stack \(stack *this\) {) s
24 431 M (71:) s
48 431 M
(   return this->size;) s
24 420 M (72:) s
48 420 M
(}) s
24 409 M (73:) s
24 398 M (74:) s
48 398 M
(void show_stack \(stack *this\) {) s
24 387 M (75:) s
48 387 M
(   fprintf \(stderr, "stack@%p->{%lu,%lu,%p}\\n",) s
24 376 M (76:) s
48 376 M
(            this, this->capacity, this->size, this->data\);) s
24 365 M (77:) s
48 365 M
(}) s
24 354 M (78:) s
_R
S
%%Page: (1) 8
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (bigint.c) def
/fdir () def
/ftail (bigint.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: bigint.c,v 1.12 2013-05-16 15:14:31-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#include <assert.h>) s
30 662 M (4:) s
48 662 M
(#include <ctype.h>) s
30 651 M (5:) s
48 651 M
(#include <stdio.h>) s
30 640 M (6:) s
48 640 M
(#include <stdlib.h>) s
30 629 M (7:) s
48 629 M
(#include <string.h>) s
30 618 M (8:) s
30 607 M (9:) s
48 607 M
(#include "bigint.h") s
24 596 M (10:) s
48 596 M
(#include "debug.h") s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(#define MIN_CAPACITY 16) s
24 563 M (13:) s
24 552 M (14:) s
48 552 M
(struct bigint {) s
24 541 M (15:) s
48 541 M
(   size_t capacity;) s
24 530 M (16:) s
48 530 M
(   size_t size;) s
24 519 M (17:) s
48 519 M
(   bool negative;) s
24 508 M (18:) s
48 508 M
(   char *digits;) s
24 497 M (19:) s
48 497 M
(};) s
24 486 M (20:) s
24 475 M (21:) s
48 475 M
(static void trim_zeros \(bigint *this\) {) s
24 464 M (22:) s
48 464 M
(   while \(this->size > 0\) {) s
24 453 M (23:) s
48 453 M
(      size_t digitpos = this->size - 1;) s
24 442 M (24:) s
48 442 M
(      if \(this->digits[digitpos] != 0\) break;) s
24 431 M (25:) s
48 431 M
(      --this->size;) s
24 420 M (26:) s
48 420 M
(   }) s
24 409 M (27:) s
48 409 M
(}) s
24 398 M (28:) s
24 387 M (29:) s
48 387 M
(bigint *new_bigint \(size_t capacity\) {) s
24 376 M (30:) s
48 376 M
(   bigint *this = malloc \(sizeof \(bigint\)\);) s
24 365 M (31:) s
48 365 M
(   assert \(this != NULL\);) s
24 354 M (32:) s
48 354 M
(   this->capacity = capacity;) s
24 343 M (33:) s
48 343 M
(   this->size = 0;) s
24 332 M (34:) s
48 332 M
(   this->negative = false;) s
24 321 M (35:) s
48 321 M
(   this->digits = calloc \(this->capacity, sizeof \(char\)\);) s
24 310 M (36:) s
48 310 M
(   assert \(this->digits != NULL\);) s
24 299 M (37:) s
48 299 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 288 M (38:) s
48 288 M
(   return this;) s
24 277 M (39:) s
48 277 M
(}) s
24 266 M (40:) s
24 255 M (41:) s
48 255 M
(bigint *new_string_bigint \(char *string\) {) s
24 244 M (42:) s
48 244 M
(   assert \(string != NULL\);) s
24 233 M (43:) s
48 233 M
(   size_t length = strlen \(string\);) s
24 222 M (44:) s
48 222 M
(   bigint *this = new_bigint \(length > MIN_CAPACITY) s
24 211 M (45:) s
48 211 M
(                            ? length : MIN_CAPACITY\);) s
24 200 M (46:) s
48 200 M
(   char *strdigit = &string[length - 1];) s
24 189 M (47:) s
48 189 M
(   if \(*string == '_'\) {) s
24 178 M (48:) s
48 178 M
(      this->negative = true;) s
24 167 M (49:) s
48 167 M
(      ++string;) s
24 156 M (50:) s
48 156 M
(   }) s
24 145 M (51:) s
48 145 M
(   char *thisdigit = this->digits;) s
24 134 M (52:) s
48 134 M
(   while \(strdigit >= string\) {) s
24 123 M (53:) s
48 123 M
(      assert \(isdigit \(*strdigit\)\);) s
24 112 M (54:) s
48 112 M
(      *thisdigit++ = *strdigit-- - '0';) s
24 101 M (55:) s
48 101 M
(   }) s
24 90 M (56:) s
48 90 M
(   this->size = thisdigit - this->digits;) s
24 79 M (57:) s
48 79 M
(   trim_zeros \(this\);) s
24 68 M (58:) s
48 68 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 57 M (59:) s
48 57 M
(   return this;;) s
24 46 M (60:) s
48 46 M
(}) s
24 35 M (61:) s
_R
S
%%Page: (2) 9
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (bigint.c) def
/fdir () def
/ftail (bigint.c) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 695 M (62:) s
24 684 M (63:) s
48 684 M
(static bigint *do_add \(bigint *this, bigint *that\) {) s
24 673 M (64:) s
48 673 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 662 M (65:) s
48 662 M
(   DEBUGS \('b', show_bigint \(that\)\);) s
24 651 M (66:) s
48 651 M
(   STUB \(return NULL\);) s
24 640 M (67:) s
48 640 M
(}) s
24 629 M (68:) s
24 618 M (69:) s
48 618 M
(static bigint *do_sub \(bigint *this, bigint *that\) {) s
24 607 M (70:) s
48 607 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 596 M (71:) s
48 596 M
(   DEBUGS \('b', show_bigint \(that\)\);) s
24 585 M (72:) s
48 585 M
(   STUB \(return NULL\);) s
24 574 M (73:) s
48 574 M
(}) s
24 563 M (74:) s
48 563 M
(void free_bigint \(bigint *this\) {) s
24 552 M (75:) s
48 552 M
(   free \(this->digits\);) s
24 541 M (76:) s
48 541 M
(   free \(this\);) s
24 530 M (77:) s
48 530 M
(}) s
24 519 M (78:) s
24 508 M (79:) s
48 508 M
(void print_bigint \(bigint *this, FILE *file\) {) s
24 497 M (80:) s
48 497 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 486 M (81:) s
48 486 M
(}) s
24 475 M (82:) s
24 464 M (83:) s
48 464 M
(bigint *add_bigint \(bigint *this, bigint *that\) {) s
24 453 M (84:) s
48 453 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 442 M (85:) s
48 442 M
(   DEBUGS \('b', show_bigint \(that\)\);) s
24 431 M (86:) s
48 431 M
(   STUB \(return NULL\);) s
24 420 M (87:) s
48 420 M
(   return NULL;) s
24 409 M (88:) s
48 409 M
(}) s
24 398 M (89:) s
24 387 M (90:) s
48 387 M
(bigint *sub_bigint \(bigint *this, bigint *that\) {) s
24 376 M (91:) s
48 376 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 365 M (92:) s
48 365 M
(   DEBUGS \('b', show_bigint \(that\)\);) s
24 354 M (93:) s
48 354 M
(   STUB \(return NULL\);) s
24 343 M (94:) s
48 343 M
(   return NULL;) s
24 332 M (95:) s
48 332 M
(}) s
24 321 M (96:) s
24 310 M (97:) s
48 310 M
(bigint *mul_bigint \(bigint *this, bigint *that\) {) s
24 299 M (98:) s
48 299 M
(   DEBUGS \('b', show_bigint \(this\)\);) s
24 288 M (99:) s
48 288 M
(   DEBUGS \('b', show_bigint \(that\)\);) s
18 277 M (100:) s
48 277 M
(   STUB \(return NULL\);) s
18 266 M (101:) s
48 266 M
(   return NULL;) s
18 255 M (102:) s
48 255 M
(}) s
18 244 M (103:) s
18 233 M (104:) s
48 233 M
(void show_bigint \(bigint *this\) {) s
18 222 M (105:) s
48 222 M
(   fprintf \(stderr, "bigint@%p->{%lu,%lu,%c,%p->", this,) s
18 211 M (106:) s
48 211 M
(            this->capacity, this->size, this->negative ? '-' : '+',) s
18 200 M (107:) s
48 200 M
(            this->digits\);) s
18 189 M (108:) s
48 189 M
(   for \(char *byte = &this->digits[this->size - 1];) s
18 178 M (109:) s
48 178 M
(        byte >= this->digits; --byte\) {) s
18 167 M (110:) s
48 167 M
(      fprintf \(stderr, "%d", *byte\);) s
18 156 M (111:) s
48 156 M
(   }) s
18 145 M (112:) s
48 145 M
(   fprintf \(stderr, "}\\n"\);) s
18 134 M (113:) s
48 134 M
(}) s
18 123 M (114:) s
_R
S
%%Page: (1) 10
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (token.c) def
/fdir () def
/ftail (token.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: token.c,v 1.8 2013-05-16 15:14:31-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#include <assert.h>) s
30 662 M (4:) s
48 662 M
(#include <ctype.h>) s
30 651 M (5:) s
48 651 M
(#include <stdio.h>) s
30 640 M (6:) s
48 640 M
(#include <stdlib.h>) s
30 629 M (7:) s
48 629 M
(#include <string.h>) s
30 618 M (8:) s
30 607 M (9:) s
48 607 M
(#include "token.h") s
24 596 M (10:) s
48 596 M
(#include "debug.h") s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(#define INIT_CAPACITY 16) s
24 563 M (13:) s
24 552 M (14:) s
48 552 M
(struct token {) s
24 541 M (15:) s
48 541 M
(   FILE *file;) s
24 530 M (16:) s
48 530 M
(   size_t capacity;) s
24 519 M (17:) s
48 519 M
(   size_t size;) s
24 508 M (18:) s
48 508 M
(   int token;) s
24 497 M (19:) s
48 497 M
(   char *buffer;) s
24 486 M (20:) s
48 486 M
(};) s
24 475 M (21:) s
24 464 M (22:) s
48 464 M
(token *new_token \(FILE *file\) {) s
24 453 M (23:) s
48 453 M
(   token *this = malloc \(sizeof \(token\)\);) s
24 442 M (24:) s
48 442 M
(   assert \(this != NULL\);) s
24 431 M (25:) s
48 431 M
(   this->file = file;) s
24 420 M (26:) s
48 420 M
(   this->capacity = INIT_CAPACITY;) s
24 409 M (27:) s
48 409 M
(   this->buffer = malloc \(this->capacity\);) s
24 398 M (28:) s
48 398 M
(   assert \(this->buffer != NULL\);) s
24 387 M (29:) s
48 387 M
(   this->buffer[0] = '\\0';) s
24 376 M (30:) s
48 376 M
(   this->size = 0;) s
24 365 M (31:) s
48 365 M
(   this->token = 0;) s
24 354 M (32:) s
48 354 M
(   DEBUGS \('t', show_token \(this\)\);) s
24 343 M (33:) s
48 343 M
(   return this;) s
24 332 M (34:) s
48 332 M
(}) s
24 321 M (35:) s
24 310 M (36:) s
48 310 M
(void free_token \(token *this\) {) s
24 299 M (37:) s
48 299 M
(   free \(this->buffer\);) s
24 288 M (38:) s
48 288 M
(   free \(this\);) s
24 277 M (39:) s
48 277 M
(}) s
24 266 M (40:) s
24 255 M (41:) s
48 255 M
(char *peek_token \(token *this\) {) s
24 244 M (42:) s
48 244 M
(   DEBUGS \('t', show_token \(this\)\);) s
24 233 M (43:) s
48 233 M
(   return this->buffer;) s
24 222 M (44:) s
48 222 M
(}) s
24 211 M (45:) s
_R
S
%%Page: (2) 11
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (token.c) def
/fdir () def
/ftail (token.c) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 695 M (46:) s
24 684 M (47:) s
48 684 M
(void ensure_capacity \(token *this, size_t capacity\) {) s
24 673 M (48:) s
48 673 M
(   if \(capacity > this->capacity\) {) s
24 662 M (49:) s
48 662 M
(      size_t double_capacity = this->capacity * 2;) s
24 651 M (50:) s
48 651 M
(      this->capacity = capacity > double_capacity) s
24 640 M (51:) s
48 640 M
(                     ? capacity : double_capacity;) s
24 629 M (52:) s
48 629 M
(      this->buffer = realloc \(this->buffer, this->capacity\);) s
24 618 M (53:) s
48 618 M
(      assert \(this->buffer\);) s
24 607 M (54:) s
48 607 M
(   }) s
24 596 M (55:) s
48 596 M
(}) s
24 585 M (56:) s
24 574 M (57:) s
48 574 M
(int scan_token \(token *this\) {) s
24 563 M (58:) s
48 563 M
(   this->size = 0;) s
24 552 M (59:) s
48 552 M
(   this->buffer[this->size] = '\\0';) s
24 541 M (60:) s
48 541 M
(   int result = EOF;) s
24 530 M (61:) s
48 530 M
(   int nextchar = 0;) s
24 519 M (62:) s
48 519 M
(   do {) s
24 508 M (63:) s
48 508 M
(      nextchar = fgetc \(this->file\);) s
24 497 M (64:) s
48 497 M
(   } while \(isspace \(nextchar\)\);) s
24 486 M (65:) s
48 486 M
(   if \(nextchar == EOF\) {) s
24 475 M (66:) s
48 475 M
(      result = EOF;) s
24 464 M (67:) s
48 464 M
(   }else if \(nextchar == '_' || isdigit \(nextchar\)\) {) s
24 453 M (68:) s
48 453 M
(      do {) s
24 442 M (69:) s
48 442 M
(         this->buffer[this->size++] = nextchar;) s
24 431 M (70:) s
48 431 M
(         ensure_capacity \(this, this->size + 1\);) s
24 420 M (71:) s
48 420 M
(         nextchar = fgetc \(this->file\);) s
24 409 M (72:) s
48 409 M
(      } while \(isdigit \(nextchar\)\);) s
24 398 M (73:) s
48 398 M
(      this->buffer[this->size] = '\\0';) s
24 387 M (74:) s
48 387 M
(      int ungetchar = ungetc \(nextchar, this->file\);) s
24 376 M (75:) s
48 376 M
(      assert \(ungetchar == nextchar\);) s
24 365 M (76:) s
48 365 M
(      result = NUMBER;) s
24 354 M (77:) s
48 354 M
(   }else {) s
24 343 M (78:) s
48 343 M
(      result = nextchar;) s
24 332 M (79:) s
48 332 M
(   }) s
24 321 M (80:) s
48 321 M
(   DEBUGS \('t', show_token \(this\)\);) s
24 310 M (81:) s
48 310 M
(   return result;) s
24 299 M (82:) s
48 299 M
(}) s
24 288 M (83:) s
24 277 M (84:) s
48 277 M
(void show_token \(token *this\) {) s
24 266 M (85:) s
48 266 M
(   fprintf \(stderr, "token@%p->{%lu,%lu,%d,%p->\\"%s\\"}\\n",) s
24 255 M (86:) s
48 255 M
(            this, this->capacity, this->size, this->token,) s
24 244 M (87:) s
48 244 M
(            this->buffer, this->buffer\);) s
24 233 M (88:) s
48 233 M
(}) s
24 222 M (89:) s
_R
S
%%Page: (1) 12
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (main.c) def
/fdir () def
/ftail (main.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(// $Id: main.c,v 1.8 2013-05-08 22:09:41-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(#include <assert.h>) s
30 662 M (4:) s
48 662 M
(#include <ctype.h>) s
30 651 M (5:) s
48 651 M
(#include <libgen.h>) s
30 640 M (6:) s
48 640 M
(#include <stdio.h>) s
30 629 M (7:) s
48 629 M
(#include <stdlib.h>) s
30 618 M (8:) s
48 618 M
(#include <string.h>) s
30 607 M (9:) s
48 607 M
(#include <unistd.h>) s
24 596 M (10:) s
24 585 M (11:) s
48 585 M
(#include "bigint.h") s
24 574 M (12:) s
48 574 M
(#include "debug.h") s
24 563 M (13:) s
48 563 M
(#include "stack.h") s
24 552 M (14:) s
48 552 M
(#include "token.h") s
24 541 M (15:) s
24 530 M (16:) s
48 530 M
(void do_push \(stack *stack, char *numstr\) {) s
24 519 M (17:) s
48 519 M
(   DEBUGF \('m', "stack=%p, numstr=%p=\\"%s\\"\\n", stack, numstr, numstr\);) s
24 508 M (18:) s
48 508 M
(   bigint *bigint = new_string_bigint \(numstr\);) s
24 497 M (19:) s
48 497 M
(   push_stack \(stack, bigint\);) s
24 486 M (20:) s
48 486 M
(}) s
24 475 M (21:) s
24 464 M (22:) s
48 464 M
(void do_binop \(stack *stack, bigint_binop binop\) {) s
24 453 M (23:) s
48 453 M
(   DEBUGS \('m', show_stack \(stack\)\);) s
24 442 M (24:) s
48 442 M
(   bigint *right = pop_stack \(stack\);) s
24 431 M (25:) s
48 431 M
(   bigint *left = pop_stack \(stack\);) s
24 420 M (26:) s
48 420 M
(   bigint *answer = binop \(left, right\);) s
24 409 M (27:) s
48 409 M
(   push_stack \(stack, answer\);) s
24 398 M (28:) s
48 398 M
(   free_bigint \(left\);) s
24 387 M (29:) s
48 387 M
(   free_bigint \(right\);) s
24 376 M (30:) s
48 376 M
(}) s
24 365 M (31:) s
24 354 M (32:) s
48 354 M
(void do_clear \(stack *stack\) {) s
24 343 M (33:) s
48 343 M
(   DEBUGF \('m', "stack=%p\\n", stack\);) s
24 332 M (34:) s
48 332 M
(   while \(! empty_stack \(stack\)\) {) s
24 321 M (35:) s
48 321 M
(      bigint *bigint = pop_stack \(stack\);) s
24 310 M (36:) s
48 310 M
(      free_bigint \(bigint\);) s
24 299 M (37:) s
48 299 M
(   }) s
24 288 M (38:) s
48 288 M
(}) s
24 277 M (39:) s
_R
S
%%Page: (2) 13
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (main.c) def
/fdir () def
/ftail (main.c) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 695 M (40:) s
24 684 M (41:) s
48 684 M
(void do_print \(stack *stack\) {) s
24 673 M (42:) s
48 673 M
(   DEBUGS \('m', show_stack \(stack\)\);) s
24 662 M (43:) s
48 662 M
(   print_bigint \(peek_stack \(stack, 0\), stdout\);) s
24 651 M (44:) s
48 651 M
(}) s
24 640 M (45:) s
24 629 M (46:) s
48 629 M
(void do_print_all \(stack *stack\) {) s
24 618 M (47:) s
48 618 M
(   DEBUGS \('m', show_stack \(stack\)\);) s
24 607 M (48:) s
48 607 M
(   int size = size_stack \(stack\);) s
24 596 M (49:) s
48 596 M
(   for \(int index = 0; index < size; ++index\) {) s
24 585 M (50:) s
48 585 M
(      print_bigint \(peek_stack \(stack, index\), stdout\);) s
24 574 M (51:) s
48 574 M
(   }) s
24 563 M (52:) s
48 563 M
(}) s
24 552 M (53:) s
24 541 M (54:) s
48 541 M
(void unimplemented \(int oper\) {) s
24 530 M (55:) s
48 530 M
(   printf \("%s: ", program_name\);) s
24 519 M (56:) s
48 519 M
(   if \(isgraph \(oper\)\) printf \("'%c' \(0%o\)", oper, oper\);) s
24 508 M (57:) s
48 508 M
(                  else printf \("0%o", oper\);) s
24 497 M (58:) s
48 497 M
(   printf \(" unimplemented\\n"\);) s
24 486 M (59:) s
48 486 M
(}) s
24 475 M (60:) s
24 464 M (61:) s
48 464 M
(void scan_options \(int argc, char **argv\) {) s
24 453 M (62:) s
48 453 M
(   opterr = false;) s
24 442 M (63:) s
48 442 M
(   for \(;;\) {) s
24 431 M (64:) s
48 431 M
(      int option = getopt \(argc, argv, "@:"\);) s
24 420 M (65:) s
48 420 M
(      if \(option == EOF\) break;) s
24 409 M (66:) s
48 409 M
(      switch \(option\) {) s
24 398 M (67:) s
48 398 M
(         case '@': set_debug_flags \(optarg\);) s
24 387 M (68:) s
48 387 M
(                   break;) s
24 376 M (69:) s
48 376 M
(         default : printf \("%s: -%c: invalid option\\n",) s
24 365 M (70:) s
48 365 M
(                           program_name, optopt\);) s
24 354 M (71:) s
48 354 M
(                   break;) s
24 343 M (72:) s
48 343 M
(      }) s
24 332 M (73:) s
48 332 M
(   }) s
24 321 M (74:) s
48 321 M
(}) s
24 310 M (75:) s
24 299 M (76:) s
48 299 M
(int main \(int argc, char **argv\) {) s
24 288 M (77:) s
48 288 M
(   program_name = basename \(argv[0]\);) s
24 277 M (78:) s
48 277 M
(   scan_options \(argc, argv\);) s
24 266 M (79:) s
48 266 M
(   stack *stack = new_stack \(\);) s
24 255 M (80:) s
48 255 M
(   token *scanner = new_token \(stdin\);) s
24 244 M (81:) s
48 244 M
(   for \(;;\) {) s
24 233 M (82:) s
48 233 M
(      int token = scan_token \(scanner\);) s
24 222 M (83:) s
48 222 M
(      if \(token == EOF\) break;) s
24 211 M (84:) s
48 211 M
(      switch \(token\) {) s
24 200 M (85:) s
48 200 M
(         case NUMBER: do_push \(stack, peek_token \(scanner\)\); break;) s
24 189 M (86:) s
48 189 M
(         case '+': do_binop \(stack, add_bigint\); break;) s
24 178 M (87:) s
48 178 M
(         case '-': do_binop \(stack, sub_bigint\); break;) s
24 167 M (88:) s
48 167 M
(         case '*': do_binop \(stack, mul_bigint\); break;) s
24 156 M (89:) s
48 156 M
(         case 'c': do_clear \(stack\); break;) s
24 145 M (90:) s
48 145 M
(         case 'f': do_print_all \(stack\); break;) s
24 134 M (91:) s
48 134 M
(         case 'p': do_print \(stack\); break;) s
24 123 M (92:) s
48 123 M
(         default: unimplemented \(token\); break;) s
24 112 M (93:) s
48 112 M
(      }) s
24 101 M (94:) s
48 101 M
(   }) s
24 90 M (95:) s
48 90 M
(   DEBUGF \('m', "EXIT %d\\n", exit_status\);) s
24 79 M (96:) s
48 79 M
(   return EXIT_SUCCESS;) s
24 68 M (97:) s
48 68 M
(}) s
_R
S
%%Page: (1) 14
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile) def
/fdir () def
/ftail (Makefile) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(# $Id: Makefile,v 1.5 2013-05-07 21:14:09-07 - - $) s
30 684 M (2:) s
30 673 M (3:) s
48 673 M
(MKFILE    = Makefile) s
30 662 M (4:) s
48 662 M
(DEPSFILE  = ${MKFILE}.deps) s
30 651 M (5:) s
48 651 M
(NOINCLUDE = ci clean spotless) s
30 640 M (6:) s
48 640 M
(NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}}) s
30 629 M (7:) s
48 629 M
(GMAKE     = gmake --no-print-directory) s
30 618 M (8:) s
30 607 M (9:) s
48 607 M
(GCC       = gcc -g -O0 -Wall -Wextra -std=gnu99) s
24 596 M (10:) s
48 596 M
(MKDEPS    = gcc -MM) s
24 585 M (11:) s
24 574 M (12:) s
48 574 M
(CSOURCE   = debug.c stack.c bigint.c token.c main.c) s
24 563 M (13:) s
48 563 M
(CHEADER   = debug.h stack.h bigint.h token.h) s
24 552 M (14:) s
48 552 M
(OBJECTS   = ${CSOURCE:.c=.o}) s
24 541 M (15:) s
48 541 M
(EXECBIN   = mydc) s
24 530 M (16:) s
48 530 M
(SUBMITS   = ${CHEADER} ${CSOURCE} ${MKFILE}) s
24 519 M (17:) s
48 519 M
(SOURCES   = ${SUBMITS}) s
24 508 M (18:) s
48 508 M
(LISTING   = Listing.ps) s
24 497 M (19:) s
48 497 M
(PROJECT   = cmps012b-wm.w13 asg4) s
24 486 M (20:) s
24 475 M (21:) s
48 475 M
(all : ${EXECBIN}) s
24 464 M (22:) s
24 453 M (23:) s
48 453 M
(${EXECBIN} : ${OBJECTS}) s
24 442 M (24:) s
48 442 M
(        ${GCC} -o $@ ${OBJECTS}) s
24 431 M (25:) s
24 420 M (26:) s
48 420 M
(%.o : %.c) s
24 409 M (27:) s
48 409 M
(        ${GCC} -c $<) s
24 398 M (28:) s
24 387 M (29:) s
48 387 M
(ci : ${SOURCES}) s
24 376 M (30:) s
48 376 M
(        cid + ${SOURCES}) s
24 365 M (31:) s
48 365 M
(        checksource ${SUBMITS}) s
24 354 M (32:) s
24 343 M (33:) s
48 343 M
(lis : ${SOURCES} ${DEPSFILE}) s
24 332 M (34:) s
48 332 M
(        mkpspdf ${LISTING} ${SOURCES} ${DEPSFILE}) s
24 321 M (35:) s
24 310 M (36:) s
48 310 M
(clean :) s
24 299 M (37:) s
48 299 M
(        - rm ${OBJECTS} ${DEPSFILE} core ${EXECBIN}.errs) s
24 288 M (38:) s
24 277 M (39:) s
48 277 M
(spotless : clean) s
24 266 M (40:) s
48 266 M
(        - rm ${EXECBIN} ${LISTING} ${LISTING:.ps=.pdf}) s
24 255 M (41:) s
24 244 M (42:) s
48 244 M
(submit : ${SUBMITS}) s
24 233 M (43:) s
48 233 M
(        submit ${PROJECT} ${SUBMITS}) s
24 222 M (44:) s
24 211 M (45:) s
48 211 M
(deps : ${CSOURCE} ${CHEADER}) s
24 200 M (46:) s
48 200 M
(        @ echo "# ${DEPSFILE} created `date`" >${DEPSFILE}) s
24 189 M (47:) s
48 189 M
(        ${MKDEPS} ${CSOURCE} >>${DEPSFILE}) s
24 178 M (48:) s
24 167 M (49:) s
48 167 M
(${DEPSFILE} :) s
24 156 M (50:) s
48 156 M
(        @ touch ${DEPSFILE}) s
24 145 M (51:) s
48 145 M
(        ${GMAKE} deps) s
24 134 M (52:) s
24 123 M (53:) s
48 123 M
(again :) s
24 112 M (54:) s
48 112 M
(        ${GMAKE} spotless deps ci all lis) s
24 101 M (55:) s
24 90 M (56:) s
48 90 M
(ifeq "${NEEDINCL}" "") s
24 79 M (57:) s
48 79 M
(include ${DEPSFILE}) s
24 68 M (58:) s
48 68 M
(endif) s
24 57 M (59:) s
_R
S
%%Page: (1) 15
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile.deps) def
/fdir () def
/ftail (Makefile.deps) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/16/13) def
/modtimestr (15:28:18) def
/user_header_p true def
/user_header_left_str ($cmps012b-wm/Assignments/asg4c-mydc-stackbignum/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(# Makefile.deps created Thu May 16 15:28:18 PDT 2013) s
30 684 M (2:) s
48 684 M
(debug.o: debug.c debug.h) s
30 673 M (3:) s
48 673 M
(stack.o: stack.c stack.h bigint.h debug.h) s
30 662 M (4:) s
48 662 M
(bigint.o: bigint.c bigint.h debug.h) s
30 651 M (5:) s
48 651 M
(token.o: token.c token.h debug.h) s
30 640 M (6:) s
48 640 M
(main.o: main.c bigint.h debug.h stack.h token.h) s
_R
S
%%Trailer
%%Pages: 15
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
