==5439== Memcheck, a memory error detector
==5439== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5439== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5439== Command: catqueue
==5439== 
return NULL
item =
	"$Id: test1.data,v 1.1 2012-02-14 20:32:33-08 - - $"
item =
	"Test data 1 line 1."
item =
	"Test data 1 line 2."
item =
	"Test data 1 line 3."
==5439== Invalid read of size 8
==5439==    at 0x400D38: isempty_queue (queue.c:44)
==5439==    by 0x400C15: main (main.c:67)
==5439==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==5439== 
==5439== 
==5439== Process terminating with default action of signal 11 (SIGSEGV)
==5439==  Access not within mapped region at address 0x0
==5439==    at 0x400D38: isempty_queue (queue.c:44)
==5439==    by 0x400C15: main (main.c:67)
==5439==  If you believe this happened as a result of a stack
==5439==  overflow in your program's main thread (unlikely but
==5439==  possible), you can try to increase the size of the
==5439==  main thread stack using the --main-stacksize= flag.
==5439==  The main thread stack size used in this run was 10485760.
==5439== 
==5439== HEAP SUMMARY:
==5439==     in use at exit: 111 bytes in 4 blocks
==5439==   total heap usage: 4 allocs, 0 frees, 111 bytes allocated
==5439== 
==5439== 111 bytes in 4 blocks are definitely lost in loss record 1 of 1
==5439==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==5439==    by 0x3C0E081081: strdup (in /lib64/libc-2.12.so)
==5439==    by 0x400A2A: putinqueue (main.c:30)
==5439==    by 0x400B7C: main (main.c:56)
==5439== 
==5439== LEAK SUMMARY:
==5439==    definitely lost: 111 bytes in 4 blocks
==5439==    indirectly lost: 0 bytes in 0 blocks
==5439==      possibly lost: 0 bytes in 0 blocks
==5439==    still reachable: 0 bytes in 0 blocks
==5439==         suppressed: 0 bytes in 0 blocks
==5439== 
==5439== For counts of detected and suppressed errors, rerun with: -v
==5439== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
